> 
> # Generated using wrapR file compare.wrapR.r
> source('get_RE.R', echo=TRUE)

> get_RE <- function(veg.long, phylo = pb.phylo, trait = pb.trait, 
+     trait.re = NULL, binary = FALSE, trans = NULL) {
+     veg.long$presence <-  .... [TRUNCATED] 

> get_phylo <- function(veg.long, phylo = pb.phylo, 
+     trait = pb.trait, trait.re = NULL, binary = FALSE, trans = NULL) {
+     veg.long$presence  .... [TRUNCATED] 
> source('hacked_code/0_pkg_func.R', echo=TRUE)

> options(stringsAsFactors = F)

> library(vegan)

> library(stringr)

> library(dplyr)

> library(brranching)

> library(tidyr)

> library(reshape2)

> library(ape)

> library(pez)

> library(lme4)

> library(phylolm)

> library(picante)

> phylo_pattern = function(veg.long, phylo, binary = FALSE, 
+     trans = NULL) {
+     if (!is.null(trans)) {
+         if (trans == "log") {
+      .... [TRUNCATED] 

> SigAIC <- function(mod, Penalty = qchisq(0.95, 1)) {
+     LL <- logLik(mod)
+     ll <- as.numeric(LL)
+     df <- attr(LL, "df")
+     as.numeric( .... [TRUNCATED] 

> Model_select_tier1R <- function(start.model, block, 
+     sig.aic = FALSE) {
+     Sigaic <- NA
+     M <- vector("list", length = length(block))
+ .... [TRUNCATED] 

> Model_select_tier2F <- function(start.model, block, 
+     sig.aic = FALSE) {
+     M = list()
+     for (j in 1:length(block)) {
+         M[[j]] < .... [TRUNCATED] 

> phylo_explained_by_multi_traits_re_sel = function(veg.long, 
+     phylo = pb.phylo, trait = pb.trait, trait.re = NULL, binary = FALSE, 
+     trans .... [TRUNCATED] 

> selection = function(veg, trait, phylo, binary = FALSE, 
+     added.traits = NULL, fixed.terms = NULL) {
+     if (!is.null(added.traits)) {
+      .... [TRUNCATED] 

> phylo_signal_slopes_envi = function(dat = NULL, veg.long = NULL, 
+     phylo, envi = NULL, binary = FALSE) {
+     if (is.null(dat)) {
+         ve .... [TRUNCATED] 

> trait_selection = function(veg.long, trait = pb.trait, 
+     binary = FALSE, trans = NULL) {
+     veg.long$presence <- as.numeric(veg.long$freq >  .... [TRUNCATED] 
> source('phyloglmm_setup.R', echo=TRUE)

> phylo.to.Z <- function(r) {
+     ntip <- length(r$tip.label)
+     Zid <- Matrix(0, ncol = length(r$edge.length), nrow = ntip)
+     nodes <- (ntip .... [TRUNCATED] 

> split_blkMat <- function(M, ind) {
+     res <- list()
+     if (length(ind) == 1) {
+         return(list(M))
+     }
+     for (i in 1:(length(ind .... [TRUNCATED] 

> modify_phylo_retrms <- function(rt, phylo, phylonm, 
+     phyloZ, nsp) {
+     n.edge <- nrow(phylo$edge)
+     phylo.pos <- c()
+     for (i in 1: .... [TRUNCATED] 

> phylo_lmm <- function(formula, data, phylo, phylonm, 
+     phyloZ, nsp = NULL, control) {
+     lmod <- lFormula(formula = formula, data = data, co .... [TRUNCATED] 

> phylo_glmm <- function(formula, data, phylo, phylonm, 
+     phyloZ, control, family) {
+     glmod <- glFormula(formula = formula, data = data, con .... [TRUNCATED] 
> source('hacked_nested.R', echo=TRUE)

> hacked_pez <- function(formula, data = list(), family = "gaussian", 
+     sp = NULL, site = NULL, random.effects = list(), REML = TRUE, 
+     s2.i .... [TRUNCATED] 

> hacked_gau <- function(formula, data = list(), family = "gaussian", 
+     sp = NULL, site = NULL, random.effects = list(), REML = TRUE, 
+     s2.i .... [TRUNCATED] 
> source('compare.R', echo=TRUE)

> library(ape)

> library(Matrix)

> library(lme4)

> library(dplyr)

> dd <- data.frame(dat)

> print(dd %>% count(site))
# A tibble: 20 x 2
     site     n
   <fctr> <int>
 1      1    28
 2      2    28
 3      3    28
 4      4    28
 5      5    28
 6      6    28
 7      7    28
 8      8    28
 9      9    28
10     10    28
11     11    28
12     12    28
13     13    28
14     14    28
15     15    28
16     16    28
17     17    28
18     18    28
19     19    28
20     20    28

> phy <- get_phylo(veg.long = dune.veg2, trait = dune.traits2[c(1, 
+     2)], trait.re = c("log.sla"), phylo = dune.phylo2, trans = "log")

> phyZ <- phylo.to.Z(phy)

> phyZ <- phyZ[order(rownames(phyZ)), ]

> dat <- (dat %>% rowwise() %>% mutate(obs = sp))

> lme4_nonnested <- phylo_lmm(Y ~ 1 + log.sla + annual + 
+     (1 | obs) + (1 | sp) + (0 + log.sla | site) + (1 | site), 
+     data = dat, phylonm = .... [TRUNCATED] 

> lme4_nested <- phylo_lmm(Y ~ 1 + log.sla + annual + 
+     (1 | site:sp), data = dat, phylonm = c("sp", "site:sp"), 
+     nsp = 28, phylo = phy, ph .... [TRUNCATED] 

> REs <- get_RE(veg.long = dune.veg2, trait = dune.traits2[c(1, 
+     2)], trait.re = c("log.sla"), phylo = dune.phylo2, trans = "log")
[1] 28 28

> re.site <- REs[[1]]

> re.sp <- REs[[2]]

> re.sp.phy <- REs[[3]]

> re.nested.phy <- REs[[4]]

> re.sla = list(unname(unlist(dat["log.sla"])), site = dat$site, 
+     covar = diag(nsite))

> re.hacked <- re.sp.phy

> re.hacked$covar <- kronecker(diag(20), re.sp.phy$covar)

> dimnames(re.hacked$covar)[[1]] <- rep(dimnames(re.sp.phy$covar)[[1]], 
+     20)

> dimnames(re.hacked$covar)[[2]] <- rep(dimnames(re.sp.phy$covar)[[2]], 
+     20)

> pez_nonnested <- communityPGLMM(formula = "Y ~ 1 + log.sla + annual", 
+     data = dat, family = "gaussian", sp = dat$sp, site = dat$site, 
+     r .... [TRUNCATED] 

> pez_nested <- communityPGLMM(formula = "Y ~ 1 + log.sla + annual", 
+     data = dat, family = "gaussian", sp = dat$sp, site = dat$site, 
+     rand .... [TRUNCATED] 

> hacked_nested <- hacked_pez(formula = "Y ~ 1 + log.sla + annual", 
+     data = dat, family = "gaussian", sp = dat$sp, site = dat$site, 
+     rando .... [TRUNCATED] 

> print(summary(pez_nonnested))
Linear mixed model fit by restricted maximum likelihood

Call:[1] "Y ~ 1 + log.sla + annual"

logLik    AIC    BIC 
-543.2 1102.5 1128.0 

Random effects:
              Variance  Std.Dev
non-nested 1 5.048e-02 0.224668
non-nested 2 4.006e-05 0.006329
non-nested 3 1.742e-02 0.131970
non-nested 4 3.656e-03 0.060461
residual     3.734e-01 0.611056

Fixed effects:
                Value Std.Error  Zscore   Pvalue    
(Intercept)  0.503572  0.072687  6.9279 4.27e-12 ***
log.sla      0.176581  0.060414  2.9228 0.003468 ** 
annual      -0.359656  0.144773 -2.4843 0.012981 *  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

NULL

> print(summary(lme4_nonnested))
Linear mixed model fit by REML ['lmerMod']

REML criterion at convergence: 1103.3

Scaled residuals: 
    Min      1Q  Median      3Q     Max 
-1.6465 -0.6741 -0.3429  0.7602  2.7032 

Random effects:
 Groups   Name        Variance Std.Dev.
 obs      (Intercept) 0.050464 0.224642
 sp       (Intercept) 0.000040 0.006325
 site     log.sla     0.017416 0.131969
 site.1   (Intercept) 0.003651 0.060427
 Residual             0.373397 0.611062
Number of obs: 560, groups:  obs, 28; sp, 28; site, 20

Fixed effects:
            Estimate Std. Error t value
(Intercept)  0.50358    0.07266   6.930
log.sla      0.17659    0.06041   2.923
annual      -0.35965    0.14476  -2.484

Correlation of Fixed Effects:
        (Intr) log.sl
log.sla  0.021       
annual  -0.288  0.038

> print(summary(pez_nested))
Linear mixed model fit by restricted maximum likelihood

Call:[1] "Y ~ 1 + log.sla + annual"

logLik    AIC    BIC 
-549.7 1109.4 1125.4 

Random effects:
          Variance Std.Dev
nested 1 0.0004566 0.02137
residual 0.3594079 0.59951

Fixed effects:
                Value Std.Error  Zscore    Pvalue    
(Intercept)  0.517559  0.045373 11.4066 < 2.2e-16 ***
log.sla      0.165626  0.033835  4.8951 9.825e-07 ***
annual      -0.426804  0.095662 -4.4616 8.136e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

NULL

> print(summary(lme4_nested))
Linear mixed model fit by REML ['lmerMod']

REML criterion at convergence: 1138.6

Scaled residuals: 
    Min      1Q  Median      3Q     Max 
-1.3426 -0.7235 -0.4153  0.7787  2.9281 

Random effects:
 Groups   Name        Variance  Std.Dev.
 site:sp  (Intercept) 0.0001681 0.01297 
 Residual             0.4114848 0.64147 
Number of obs: 560, groups:  site:sp, 560

Fixed effects:
            Estimate Std. Error t value
(Intercept)  0.50508    0.03640  13.875
log.sla      0.17783    0.02846   6.249
annual      -0.35792    0.07857  -4.555

Correlation of Fixed Effects:
        (Intr) log.sl
log.sla  0.017       
annual  -0.311  0.043

> print(summary(hacked_nested))
Linear mixed model fit by restricted maximum likelihood

Call:[1] "Y ~ 1 + log.sla + annual"

logLik    AIC    BIC 
-560.9 1131.8 1147.7 

Random effects:
              Variance Std.Dev
non-nested 1 0.0001681 0.01297
residual     0.4114871 0.64147

Fixed effects:
                Value Std.Error  Zscore    Pvalue    
(Intercept)  0.505078  0.036401 13.8752 < 2.2e-16 ***
log.sla      0.177827  0.028459  6.2486 4.141e-10 ***
annual      -0.357924  0.078575 -4.5552 5.233e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

NULL
> # Wrapped output file compare.wrapR.rout
> 
